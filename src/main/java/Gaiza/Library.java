/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Gaiza;
import org.javacord.api.DiscordApi;
import org.javacord.api.DiscordApiBuilder;

import commands.*;
import commandsAdmin.*;
import de.btobastian.sdcf4j.CommandExecutor;
import de.btobastian.sdcf4j.CommandHandler;
import de.btobastian.sdcf4j.handler.JavacordHandler;
import jsonDatabase.*;
import listener.*;
import management.*;

import java.io.*;

public class Library
{
	
	 public boolean someLibraryMethod() {
	        return true;
	 }

	public static void main(String[] args) throws Exception {
		Token token = new Token();
		DiscordApi startUpApi = new DiscordApiBuilder().setToken(token.getToken()).login().join();
		startUpApi.updateActivity(BotInfo.getBotActivity());
		
		commandInit(startUpApi);
	}
	
	@SuppressWarnings("unused")
	static void commandInit(DiscordApi initApi) throws Exception {
		//Initializes all the commands, listeners, and management
		
		CommandHandler cHandler = new JavacordHandler(initApi);
		String fileA = "Ping";
		
		File folder = new File("C:\\Users\\17244\\Documents\\JavaProjects\\Gaiza\\src\\main\\java\\commands");
		
		InitDatabase dbInit = new InitDatabase(initApi);
		GlobalUserInformation initUsers = new GlobalUserInformation(initApi);
		cHandler.registerCommand(new Ping());
		
		/*try {
			for (final File commandName : folder.listFiles()) {
				if (!commandName.isDirectory()) {
					String[] fileName = commandName.getName().split(".");
					cHandler.registerCommand((CommandExecutor) Class.forName(fileName[0]).newInstance());
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}*/
	}
}
